//
//  IQCRuKuViewController.swift
//  IMEFuture
//
//  Created by 邓亚洲 on 2018/7/16.
//  Copyright © 2018年 Netease. All rights reserved.
//

import UIKit

class IQCRuKuViewController: UIViewController, UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource {
    
    var arrayMaterialArrivedOrderDetailVo: [MaterialArrivedOrderDetailVo]! = []
    
    private let _height_NavBar = Height_NavBar
    private let _height_BottomBar = Height_BottomBar
    
    private var _viewLoading: UIView!
    
    @IBOutlet weak var viewZhong0: UIView!
    @IBOutlet weak var viewZhong1: UIView!
    @IBOutlet weak var labelGongYingShang: UILabel!
    
    
    @IBOutlet weak var viewBottom0: UIView!
    @IBOutlet weak var viewBottom1: UIView!
    
    @IBOutlet weak var textField: UITextField!
    @IBOutlet weak var label: UILabel!
    
    @IBOutlet weak var tableView: UITableView!
    
    @IBOutlet weak var heightNavBar: NSLayoutConstraint!
    @IBOutlet weak var heightBottomBar: NSLayoutConstraint!
    @IBOutlet weak var heightBottomBar1: NSLayoutConstraint!
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        UIApplication.shared.statusBarStyle = UIStatusBarStyle.lightContent
        self.tableView.reloadData()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        self.heightNavBar.constant = _height_NavBar!
        self.heightBottomBar.constant = _height_BottomBar!
        self.heightBottomBar1.constant = _height_BottomBar!
        
//        self.viewZhong0.isHidden = true
//        self.viewBottom0.isHidden = true
        self.viewZhong1.isHidden = true
        self.viewBottom1.isHidden = true
        
//        self.tableView.register(UITableViewCell().classForCoder, forCellReuseIdentifier: "cell")
        self.tableView.register(UINib.init(nibName: "IQCRuKuCell", bundle: nil), forCellReuseIdentifier: "iQCRuKuCell")
        self.tableView.delegate = self
        self.tableView.dataSource = self
        self.tableView.separatorStyle = UITableViewCellSeparatorStyle.none
        self.tableView.tableFooterView = UIView()
//        self.tableView.estimatedRowHeight = 60
//        self.tableView.rowHeight = UITableViewAutomaticDimension
        
        
        _viewLoading = UIView.loading(withFrame: CGRect(x: 0, y: _height_NavBar!, width: kMainW, height: kMainH), color: UIColor.clear, imageView: CGRect(x: (kMainW - 34)/2, y: 180, width: 34, height: 34))
        self.view.addSubview(_viewLoading)
        _viewLoading.isHidden = true
        
        self.setAttributedString(text: "摄像头对准收货单二维码，\n点击扫描")//设置中间字颜色
        
        self.textField.delegate = self
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.arrayMaterialArrivedOrderDetailVo.count
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell: IQCRuKuCell = tableView.dequeueReusableCell(withIdentifier: "iQCRuKuCell", for: indexPath) as! IQCRuKuCell
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        
        let materialArrivedOrderDetailVo = self.arrayMaterialArrivedOrderDetailVo[indexPath.row]
        cell.label0.text = materialArrivedOrderDetailVo.materialCode
        cell.label1.text = materialArrivedOrderDetailVo.materialText
        cell.label2.text = materialArrivedOrderDetailVo.planQuantity.stringValue
        
        
        cell.label3.isHidden = true
        cell.label4.isHidden = true
    
        if  materialArrivedOrderDetailVo.status.intValue == 1 {//已检验
            cell.label4.isHidden = false
        } else {//待检验
            cell.label3.isHidden = false
        }
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let vc = IQCJianYanJieGuoVC()
        vc.materialArrivedOrderDetailVo = self.arrayMaterialArrivedOrderDetailVo[indexPath.row]
        if vc.materialArrivedOrderDetailVo.status.intValue == 0 {
            vc.materialArrivedOrderDetailVo.qualifiedQuantity = vc.materialArrivedOrderDetailVo.planQuantity
        }
        self.navigationController?.pushViewController(vc, animated: true)
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.request(result: textField.text!)
        textField.resignFirstResponder()
        return true
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.textField.resignFirstResponder()
    }
    
//    MARK: 扫描
    @IBAction func buttonScan(_ sender: Any) {
//        print("\(#function)");
        let saoYiSao = SaoYiSaoVC()
        saoYiSao.scanTitle = "扫描收货单号"
        saoYiSao.resultBlock = {(result: String!) -> () in
            self.request(result: result)
        }
        self.present(saoYiSao, animated: true, completion: nil)
    }
    
    func request(result: String?) {
        _viewLoading.isHidden = false
        let loginModel: LoginModel = DatabaseTool.getLoginModel()
        let userBean = UserBean.mj_object(withKeyValues: loginModel.ucenterUser)
        let siteCode = userBean?.enterpriseInfo.serialNo
        
        
        let mesPostEntityBean: MesPostEntityBean = MesPostEntityBean.init()
        let materialArrivedOrderDetailVo: MaterialArrivedOrderDetailVo = MaterialArrivedOrderDetailVo.init()
        materialArrivedOrderDetailVo.siteCode = siteCode
        materialArrivedOrderDetailVo.arrivedOrderNum = result
        mesPostEntityBean.entity = materialArrivedOrderDetailVo.mj_keyValues() as! [AnyHashable : Any]
        let dic = mesPostEntityBean.mj_keyValues() as! [AnyHashable : Any]
        
        HttpMamager.postRequest(withURLString: DYZ_materialArrivedOrder_materialArrivedOrderDetailList, parameters: dic, success: { (responseObjectModel : Any?) in
            let returnEntityBean: ReturnListBean = responseObjectModel as! ReturnListBean
            
            self._viewLoading.isHidden = true
            if returnEntityBean.status == "SUCCESS" {
                self.viewZhong0.isHidden = true
                self.viewBottom0.isHidden = true
                self.viewZhong1.isHidden = true
                self.viewBottom1.isHidden = true
                
                self.arrayMaterialArrivedOrderDetailVo = [];
                for value in returnEntityBean.list{
                    let materialArrivedOrderDetailVo:MaterialArrivedOrderDetailVo = MaterialArrivedOrderDetailVo.mj_object(withKeyValues: value)
                    self.arrayMaterialArrivedOrderDetailVo.append(materialArrivedOrderDetailVo)
                    self.labelGongYingShang.text = "供应商-"+materialArrivedOrderDetailVo.supplierText
                    self.textField.text = materialArrivedOrderDetailVo.arrivedOrderNum
                }
                
                if self.arrayMaterialArrivedOrderDetailVo.count == 0 {
                    self.viewZhong0.isHidden = false
                    self.viewBottom0.isHidden = false
                } else {
                    self.viewZhong1.isHidden = false
                    self.viewBottom1.isHidden = false
                }
                
                
                self.tableView.reloadData()
            } else {
                MyAlertCenter.default().postAlert(withMessage: returnEntityBean.returnMsg)
            }
        }, fail: { (error : Error?) in
            self._viewLoading.isHidden = true
        }, isKindOfModel: NSClassFromString("ReturnListBean"))
    }
    
//    MARK:批量提交
    @IBAction func buttonCommit(_ sender: Any) {
        _viewLoading.isHidden = false
        let mesPostEntityBean: MesPostEntityBean = MesPostEntityBean()
        
        let loginModel: LoginModel = DatabaseTool.getLoginModel()
        let tpfUser = UserInfoVo.mj_object(withKeyValues: loginModel.tpfUser)
        let userCode = tpfUser?.userCode
        
        var arrayTemp: [MaterialArrivedOrderDetailVo] = []
        for value in self.arrayMaterialArrivedOrderDetailVo {
            if value.status.intValue == 0 {//待检验
                value.qualifiedQuantity = value.planQuantity
                value.receivedQuantity = value.planQuantity
                value.receivedUser = userCode
                arrayTemp.append(value)
            }
        }
        
        mesPostEntityBean.entity = arrayTemp
        
        let dic = mesPostEntityBean.mj_keyValues() as! [AnyHashable : Any]

        HttpMamager.postRequest(withURLString: DYZ_materialArrivedOrder_updateMaterialArrivedOrderDetails, parameters: dic, success: { (responseObjectModel: Any?) in
            let returnMsgBean =  responseObjectModel as! ReturnMsgBean
            self._viewLoading.isHidden = true
            if returnMsgBean.status == "SUCCESS" {
                
                var aa: Bool = false
                for value in self.arrayMaterialArrivedOrderDetailVo {
                    if value.status.intValue == 0 {//待检验
                        aa = true
                    }
                }
                if aa == true {
                    MyAlertCenter.default().postAlert(withMessage: "提交成功")
                } else {
                    MyAlertCenter.default().postAlert(withMessage: "已全部提交，无需重复提交")
                }
                
                self.navigationController?.popViewController(animated: true)
            } else {
                MyAlertCenter.default().postAlert(withMessage: returnMsgBean.returnMsg)
            }

        }, fail: { (error: Error?) in
            self._viewLoading.isHidden = true
        }, isKindOfModel: NSClassFromString("ReturnMsgBean"))
    }
    
    
    func setAttributedString(text: String) {
        let attributeStr: NSMutableAttributedString = NSMutableAttributedString.init(string: text)
        attributeStr.addAttribute(NSAttributedStringKey.foregroundColor, value: colorRGB(r: 0, g: 122, b: 254), range: NSMakeRange(5, text.count - 9))
        self.label.attributedText = attributeStr
    }
    
    @IBAction func back(_ sender: Any) {
        self.navigationController?.popViewController(animated: true)
    }
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
